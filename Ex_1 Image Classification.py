# -*- coding: utf-8 -*-
"""computer vision .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V1wYWnjFG2Fk5GqJ5vRo28tLDzWA56Q0
"""

import numpy as np
from keras.datasets import mnist
from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Flatten, Dense
import matplotlib.pyplot as plt
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train = x_train.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)
model = Sequential()
model.add(Flatten(input_shape=(28, 28)))
model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation='softmax'))
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.summary()
model.fit(x_train, y_train, epochs=10)
test_loss, test_acc = model.evaluate(x_test, y_test)
print(f"Test accuracy: {test_acc}")
predictions = model.predict(x_test)
for i in range(5):
  plt.imshow(x_test[i], cmap='gray')
plt.title(f"Predicted label: {np.argmax(predictions[i])}")
plt.show()